/*!*************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./assets/styles/app.css ***!
  \*************************************************************************************************/
._container{
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 8px;
}
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/vue/controllers/CityCrud/AddCityComponent.vue?vue&type=style&index=0&id=d3ad0790&scoped=true&lang=css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************/

.page-container[data-v-d3ad0790]{
  display: flex;
  justify-content: center;
}
.form-container[data-v-d3ad0790]{
  margin-top: 4vh;
}
.button-container[data-v-d3ad0790]{
  display: flex;
}
.btn[data-v-d3ad0790]{
  margin-right: 20px;
}

/*!****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/vue/controllers/MapComponent.vue?vue&type=style&index=0&id=7ba1f030&scoped=true&lang=css ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************/

.map-wrapper[data-v-7ba1f030]{
  display: flex;
  justify-content: center;
}
#map[data-v-7ba1f030] {
  height: 50vh;
  width: 94%;
}

/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/vue/controllers/StylistComponent.vue?vue&type=style&index=0&id=0f665514&scoped=true&lang=css ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/

.stylists-container[data-v-0f665514]{
  margin-top: 24px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
}
.card[data-v-0f665514]{
  width: 350px;
  margin: 0 12px 20px 12px;
  border: 2px solid lightgray;
}
.noneStylists[data-v-0f665514]{
  display: flex;
  justify-content: center;
  margin-top: 150px;
}
.card-img-top[data-v-0f665514]{
  width: 100%;
  height: 250px;
}

/*!************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/vue/controllers/StylistWorkComponent.vue?vue&type=style&index=0&id=751ae965&scoped=true&lang=css ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************/

.datepicker-container-main[data-v-751ae965]{
  display: flex;
  justify-content: center;
}
.datePicker-container[data-v-751ae965]{
  width: 300px;
  display: none;
}
.active[data-v-751ae965]{
  display: block;
}
.page-container[data-v-751ae965] {
  display: flex;
  justify-content: center;
  margin-top: 50px;
}
.service-container[data-v-751ae965] {
  width: 600px;
  margin: 0 auto 20px auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border: 1px solid #ccc;
  border-radius: 10px;
  padding: 15px;
  box-shadow: 2px 4px 10px rgba(0, 0, 0, 0.1);
}
@media (max-width: 664px) {
.service-container[data-v-751ae965]{
    width: 85vw;
}
}
@media (max-width: 364px) {
.service-container[data-v-751ae965]{
    flex-direction: column;
    width: 65vw;
}
}
.free-hour[data-v-751ae965]{
  display: flex;
  justify-content: center;
}
.btn-choose-hour[data-v-751ae965]{
  width: 200px;
  margin-top: 20px;
}
.grow[data-v-751ae965]:hover {
  -ms-transform: scale(1.1);
  transform: scale(1.1);
  transition-duration: 1s;
}
.loader-container[data-v-751ae965]{
  display: flex;
  justify-content: center;
  margin-top: 150px;
}
.time-loader-container[data-v-751ae965]{
  display: flex;
  justify-content: center;
  margin-top: 40px;
}
.time-loader[data-v-751ae965] {
  width: fit-content;
  font-weight: bold;
  font-family: monospace;
  font-size: 30px;
  background: linear-gradient(90deg,#000 50%,#0000 0) right/200% 100%;
  animation: l21-751ae965 2s infinite linear;
}
.time-loader[data-v-751ae965]::before {
  content: "Loading...";
  color: #0000;
  padding: 0 5px;
  background: inherit;
  background-image: linear-gradient(90deg,#fff 50%,#000 0);
  -webkit-background-clip: text;
  background-clip: text;
}
@keyframes l21-751ae965 {
100% {
    background-position: left
}
}

/*!*****************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-4.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./assets/vue/controllers/confirmationOfReservation.vue?vue&type=style&index=0&id=f892477e&scoped=true&lang=css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************/

.page-container[data-v-f892477e]{
  display: flex;
  justify-content: center;
  margin-top: 40px;
}
.accepting-info[data-v-f892477e]{
  display: flex;
  justify-content: center;
  margin-top: 40px;
}
.loader-container[data-v-f892477e]{
  display: flex;
  justify-content: center;
  margin-top: 150px;
}
.loader[data-v-f892477e] {
  width: fit-content;
  font-weight: bold;
  font-family: monospace;
  font-size: 30px;
  background: linear-gradient(90deg,#000 50%,#0000 0) right/200% 100%;
  animation: l21-f892477e 2s infinite linear;
}
.loader[data-v-f892477e]::before {
  content: "Loading...";
  color: #0000;
  padding: 0 5px;
  background: inherit;
  background-image: linear-gradient(90deg,#fff 50%,#000 0);
  -webkit-background-clip: text;
  background-clip: text;
}
.btn-container[data-v-f892477e]{
  display: flex;
}
@keyframes l21-f892477e {
100% {
    background-position: left
}
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/